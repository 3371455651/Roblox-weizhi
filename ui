local touchSensitivity = 5 -- 调整这个值以控制触摸拖动的灵敏度
local function MakeDraggable(DragPoint, Main)
    pcall(function()
        local Dragging = false
        local DragInput = nil
        local InitialTouchPos = Vector2.new()
        local InitialPosition = UDim2.new()

        AddConnection(DragPoint.InputBegan, function(Input)
            if Input.UserInputType == Enum.UserInputType.MouseButton1 then
                Dragging = true
                InitialMousePos = Vector2.new(Input.Position)
                InitialPosition = Main.Position
            end
        end)
        AddConnection(UserInputService.TouchStarted, function(Input)
            Dragging = true
            InitialTouchPos = Vector2.new(Input.Position)
            InitialPosition = Main.Position
        end)

        AddConnection(DragPoint.InputEnded, function(Input)
            if Input.UserInputType == Enum.UserInputType.MouseButton1 then
                Dragging = false
            end
        end)
        AddConnection(UserInputService.TouchEnded, function()
            Dragging = false
        end)

        AddConnection(UserInputService.InputChanged, function(Input)
            if Input.UserInputType == Enum.UserInputType.MouseMovement and Dragging then
                local Delta = Vector2.new(Input.Position) - InitialMousePos
                Main.Position = UDim2.new(InitialPosition.X.Scale, InitialPosition.X.Offset + Delta.X, InitialPosition.Y.Scale, InitialPosition.Y.Offset + Delta.Y)
            end
        end)
        AddConnection(UserInputService.TouchMoved, function(Input)
            if Dragging then
                local Delta = Vector2.new(Input.Position) - InitialTouchPos
                -- 添加阈值处理
                if Delta.Magnitude > touchSensitivity then
                    Main.Position = UDim2.new(InitialPosition.X.Scale, InitialPosition.X.Offset + Delta.X, InitialPosition.Y.Scale, InitialPosition.Y.Offset + Delta.Y)
                end
            end
        end)
    end)
end
